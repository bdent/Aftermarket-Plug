{"version":3,"sources":["logo.png","App.js","reportWebVitals.js","index.js"],"names":["index","require","algoliasearch","initIndex","options","key","text","value","App","props","inputChange","event","a","currentSearch","target","setState","searchQuery","activePage","setTimeout","state","getProduct","search","loading","hitsPerPage","then","hits","searchResults","catch","err","console","log","handlePaginationChange","data","window","scrollTo","top","behavior","fetch","searchType","response","status","json","products","total","pageProperties","properties","searchMethodChanged","contextRef","createRef","this","className","Container","ref","style","width","padding","Image","src","size","centered","Sticky","context","backgroundColor","Input","label","Dropdown","onChange","defaultValue","labelPosition","placeholder","fluid","textAlign","Pagination","defaultActivePage","totalPages","maxpages","onPageChange","ellipsisItem","firstItem","lastItem","disabled","Card","Group","itemsPerRow","isMobile","length","map","hit","Placeholder","square","Header","Line","stockBreakdown","product","option","attributes","stock","ribbon","content","promotionpriceasnumber","color","image","wrapped","ui","Content","textOverflow","overflow","whiteSpace","name","Meta","productid","Description","margin","extra","totalstock","moment","dateintroduced","fromNow","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wTAAe,I,gHCkCTA,EAFgBC,EAAQ,IACfC,CAAc,aAAc,oCACtBC,UAAU,sCAyBzBC,EAAU,CACZ,CAAEC,IAAK,SAAUC,KAAM,SAAUC,MAAO,UACxC,CAAEF,IAAK,UAAWC,KAAM,aAAcC,MAAO,WAC7C,CAAEF,IAAK,WAAYC,KAAM,WAAYC,MAAO,aAK3BC,E,kDAEjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAYVC,YAbmB,uCAaL,WAAOC,GAAP,eAAAC,EAAA,sDACNC,EAAgBF,EAAMG,OAAOP,MAEjC,EAAKQ,SAAS,CACVC,YAAaH,EACbI,WAAY,IAGhBC,YAAW,WACHL,IAAkB,EAAKM,MAAMH,aAC7B,EAAKI,WAAWP,KAErB,KAZO,2CAbK,wDA8BnBQ,OA9BmB,uCA8BV,WAAOR,GAAP,SAAAD,EAAA,sDAEL,EAAKG,SAAS,CACVO,SAAS,IAGbtB,EACKqB,OAAO,EAAKF,MAAMH,YAAa,CAC5BO,YAAa,MAEhBC,KAJL,uCAIU,6BAAAZ,EAAA,yDAASa,EAAT,EAASA,KACPZ,IAAkB,EAAKM,MAAMH,YAD/B,gBAEE,EAAKD,SAAS,CACVW,cAAeD,EACfH,SAAS,IAJf,2FAJV,uDAcKK,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MArBf,2CA9BU,wDAuDnBG,uBAvDmB,uCAuDM,WAAOpB,EAAOqB,GAAd,SAAApB,EAAA,6DACrBiB,QAAQC,IAAInB,EAAOqB,GAEnBC,OAAOC,SAAS,CACZC,IAAK,EACLC,SAAU,WALO,SAQf,EAAKrB,SAAS,CAChBE,WAAYe,EAAKf,aATA,OAYrB,EAAKG,WAAW,EAAKD,MAAMH,aAZN,2CAvDN,0DAuEnBI,WAvEmB,uCAuEN,WAAOP,GAAP,iBAAAD,EAAA,6DAET,EAAKG,SAAS,CACVO,SAAS,IAHJ,SAMYe,MAAM,GAAD,OAjFnB,uCAiFmB,iBAAmB,EAAKlB,MAAMmB,WAA9B,gBAAgDzB,EAAhD,iBAAsE,EAAKM,MAAMF,aANlG,UAOe,OADpBsB,EANK,QAOIC,OAPJ,iCAQYD,EAASE,OARrB,OAQDA,EARC,OASL,EAAK1B,SAAS,CACVW,cAAkD,IAAlCe,EAAKT,KAAKA,KAAKU,SAASC,MAAe,GAAKF,EAAKT,KAAKA,KAAKU,SAASA,SACpFE,eAAmD,IAAlCH,EAAKT,KAAKA,KAAKU,SAASC,MAAe,KAAOF,EAAKT,KAAKA,KAAKU,SAASG,WACvFvB,SAAS,IAZR,wBAeL,EAAKP,SAAS,CACVW,cAAe,GACfkB,eAAgB,KAChBtB,SAAS,IAlBR,4CAvEM,wDAgGnBwB,oBAhGmB,uCAgGG,WAAOnC,EAAOqB,GAAd,SAAApB,EAAA,sEACZ,EAAKG,SAAS,CAChBuB,WAAYN,EAAKzB,MACjBmB,cAAe,GACfkB,eAAgB,KAChB3B,WAAY,IALE,OAQlBgB,OAAOC,SAAS,CACZC,IAAK,EACLC,SAAU,WAGd,EAAKhB,WAAW,EAAKD,MAAMH,aAbT,2CAhGH,wDAEf,EAAKG,MAAQ,CACTH,YAAa,GACbU,cAAe,GACfkB,eAAgB,KAChBN,WAAY,SACZhB,SAAS,EACTL,WAAY,GAEhB,EAAK8B,WAAaC,sBAVH,E,qDAgNT,IAAD,OAIL,OAFAnB,QAAQC,IAAImB,KAAK9B,OAGb,qBAAK+B,UAAU,MAAf,SACI,cAACC,EAAA,EAAD,UACI,sBAAKD,UAAU,gBAAgBE,IAAKH,KAAKF,WAAzC,UAEQ,sBAAKM,MAAO,CAERC,MAAO,QAFX,UAII,qBAAKD,MAAO,CAAEE,QAAS,cAAvB,SACI,cAACC,EAAA,EAAD,CAAOC,IAAI,mEAAmEC,KAAK,SAASC,UAAQ,MAKxG,cAACC,EAAA,EAAD,CAAQP,MAAO,CAAEC,MAAO,QAAUO,QAASZ,KAAKF,WAAhD,SACI,sBAAKM,MAAO,CAERS,gBAAiB,UACjBR,MAAO,OACPC,QAAS,cAJb,UAMI,cAACQ,EAAA,EAAD,CACIC,MAAO,cAACC,EAAA,EAAD,CAAUC,SAAUjB,KAAKH,oBAAqBqB,aAAa,SAAS/D,QAASA,IAEpFgE,cAAc,OACd7D,MAAO0C,KAAK9B,MAAMH,YAClBM,QAAS2B,KAAK9B,MAAMG,QACpB4C,SAAUjB,KAAKvC,YACf2D,YAAY,wBACZC,OAAK,EACLjB,MAAO,CACHE,QAAS,YAIjB,qBAAKF,MAAO,CACRkB,UAAW,UADf,SAIQtB,KAAK9B,MAAMyB,eACP,cAAC4B,EAAA,EAAD,CACIC,kBAAmB,EACnBC,WAAYzB,KAAK9B,MAAMyB,eAAe+B,SACtC1D,WAAYgC,KAAK9B,MAAMF,WACvB2D,aAAc3B,KAAKlB,uBAKnB8C,aAAc,KACdC,UAAW,KACXC,SAAU,OAKd,cAACP,EAAA,EAAD,CACIC,kBAAmB,EACnBC,WAAY,EACZzD,WAAYgC,KAAK9B,MAAMF,WACvB+D,UAAQ,EAKRH,aAAc,KACdC,UAAW,KACXC,SAAU,iBA4D1C,qBAAK1B,MAAO,CACRE,QAAS,aADb,SAGI,cAAC0B,EAAA,EAAKC,MAAN,CAAYC,YAAcC,WAAY,EAAI,EAA1C,SAE6C,IAApCnC,KAAK9B,MAAMO,cAAc2D,OACtBpC,KAAK9B,MAAMO,cAAc4D,KAAI,SAACC,GAE1B,GAAI,EAAKpE,MAAMG,QACX,OAEI,cAAC2D,EAAA,EAAD,CAAM5B,MAAO,CACTE,QAAS,IADb,SAGI,eAACiC,EAAA,EAAD,WACI,cAACA,EAAA,EAAYhC,MAAb,CAAmBiC,QAAM,IACzB,eAACD,EAAA,EAAYE,OAAb,WACI,cAACF,EAAA,EAAYG,KAAb,CAAkBN,OAAO,WACzB,cAACG,EAAA,EAAYG,KAAb,CAAkBN,OAAO,uBAyBzCxD,QAAQC,IAAIyD,GAEZ,IAAIK,EAAiBL,EAAIM,QAAQzF,QAAQkF,KAAI,SAACQ,GAC1C,MAAM,GAAN,OAAUA,EAAOC,WAAWrC,KAAK,GAAjC,aAAwCoC,EAAOE,MAA/C,QAGJ,OACI,eAACf,EAAA,EAAD,WACI,cAACzB,EAAA,EAAD,CAAOQ,MAAO,CAAEiC,OAAQ,QAASC,QAAQ,OAAD,OAAMX,EAAIM,QAAQC,OAAOK,wBAA0BC,MAAO,OAAS3C,IAAK8B,EAAIM,QAAQQ,MAAOC,SAAO,EAACC,IAAI,IAC/I,eAACtB,EAAA,EAAKuB,QAAN,WACI,cAACvB,EAAA,EAAKS,OAAN,CAAarC,MAAO,CAChBoD,aAAc,WACdC,SAAU,SACVC,WAAY,OAHhB,SAIIpB,EAAIM,QAAQe,OAChB,cAAC3B,EAAA,EAAK4B,KAAN,UACI,sBAAM3D,UAAU,OAAhB,SAAwBqC,EAAIM,QAAQiB,cAExC,cAAC7B,EAAA,EAAK8B,YAAN,UAcKnB,EAAeN,KAAI,SAACQ,GACjB,OAAO,mBAAGzC,MAAO,CAAEE,QAAS,EAAGyD,OAAQ,GAAhC,SAAsClB,YAKzD,cAACb,EAAA,EAAKuB,QAAN,CAAcS,OAAK,EAAnB,SACI,iCAAQ,8CACU1B,EAAIM,QAAQqB,kBAGlC,cAACjC,EAAA,EAAKuB,QAAN,CAAcS,OAAK,EAAnB,SAES,mBAAoB1B,EAAIM,QACrB,iCAAQ,uCACGsB,IAAO5B,EAAIM,QAAQuB,gBAAgBC,eAG9C,iCAAQ,mEAWpC,oB,GA9bPC,aCvDlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjG,MAAK,YAAkD,IAA/CkG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7058886e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b77036b7.png\";","import React, {Component, createRef} from 'react';\n\nimport logo from './logo.png';\nimport './App.css';\n\nimport 'semantic-ui-css/semantic.min.css';\n\n// import { Input } from 'semantic-ui-react';\n\nimport moment from 'moment';\n\nimport {\n    isBrowser,\n    isMobile\n} from \"react-device-detect\";\n\nimport {\n    Card,\n    Icon,\n    Image,\n    Input,\n    Container,\n    Dropdown,\n    Pagination,\n    Accordion,\n    Label,\n    Header,\n    Sticky,\n    Placeholder\n} from 'semantic-ui-react'\n\n// const request = require('request-promise');\nconst algoliasearch = require(\"algoliasearch\");\nconst client = algoliasearch(\"AB7G20A8HU\", \"b66828a8b34cae4dcd4d56bd164b0a9f\");\nconst index = client.initIndex(\"staging_fa_products_azure_foo_desc\");\n// const index = client.initIndex(\"prod_fa_products_azure_searchable\");\n\n// https://ab7g20a8hu-dsn.algolia.net/1/indexes/prod_fa_products_azure_first_added_desc/query HTTP/1.1\n//     Host: ab7g20a8hu-dsn.algolia.net\n// Content-Type: application/json\n// Accept-Encoding: gzip, deflate, br\n\n\n// index.setSettings({\n//     ranking: [\n//         \"desc(first-stock-date)\",\n//         \"typo\",\n//         \"geo\",\n//         \"words\",\n//         \"filters\",\n//         \"proximity\",\n//         \"attribute\",\n//         \"exact\",\n//         \"custom\"\n//     ]\n// }).then(() => {\n//     // done\n// });\n\nconst options = [\n    { key: 'search', text: 'Search', value: 'search' },\n    { key: 'product', text: 'Direct PID', value: 'product' },\n    { key: 'category', text: 'Category', value: 'category' },\n]\n\nconst apiURL = 'https://footasylum-api.herokuapp.com'\n\nexport default class App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchQuery: '',\n            searchResults: [],\n            pageProperties: null,\n            searchType: 'search',\n            loading: false,\n            activePage: 1\n        }\n        this.contextRef = createRef()\n    }\n\n    inputChange = async (event) => {\n        let currentSearch = event.target.value;\n\n        this.setState({\n            searchQuery: currentSearch,\n            activePage: 1\n        });\n\n        setTimeout(() => {\n            if (currentSearch === this.state.searchQuery) {\n                this.getProduct(currentSearch);\n            }\n        }, 750)\n\n\n    }\n\n    search = async (currentSearch) => {\n\n        this.setState({\n            loading: true\n        });\n\n        index\n            .search(this.state.searchQuery, {\n                hitsPerPage: 300\n            })\n            .then(async ({ hits }) => {\n                if (currentSearch === this.state.searchQuery) {\n                    this.setState({\n                        searchResults: hits,\n                        loading: false\n                    })\n                } else {\n                    return;\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    handlePaginationChange = async (event, data) => {\n        console.log(event, data);\n\n        window.scrollTo({\n            top: 0,\n            behavior: 'smooth',\n        })\n\n        await this.setState({\n            activePage: data.activePage\n        })\n\n        this.getProduct(this.state.searchQuery);\n\n    }\n\n    getProduct = async (currentSearch) => {\n\n        this.setState({\n            loading: true\n        });\n\n        let response = await fetch(`${apiURL}?type=${this.state.searchType}&key=${currentSearch}&page=${this.state.activePage}`);\n        if (response.status === 200) {\n            let json = await response.json();\n            this.setState({\n                searchResults: (json.data.data.products.total === 0) ? [] : json.data.data.products.products,\n                pageProperties: (json.data.data.products.total === 0) ? null : json.data.data.products.properties,\n                loading: false\n            })\n        } else {\n            this.setState({\n                searchResults: [],\n                pageProperties: null,\n                loading: false\n            })\n        }\n\n\n    }\n\n    searchMethodChanged = async (event, data) => {\n        await this.setState({\n            searchType: data.value,\n            searchResults: [],\n            pageProperties: null,\n            activePage: 1\n        });\n\n        window.scrollTo({\n            top: 0,\n            behavior: 'smooth',\n        })\n\n        this.getProduct(this.state.searchQuery);\n    }\n\n    // getProduct = async (currentSearch) => {\n    //     let options = {\n    //         uri: 'https://api-e3.nuqlium.com/api/2.0/search/',\n    //         method: 'POST',\n    //         form: {\n    //             clientid: 'dfd62026-1477-48b5-ac33-d04ec326968b',\n    //             pagetype: 'product',\n    //             pagekey: this._pid,\n    //             mode: 'app',\n    //             dataindex: '100029',\n    //             output: 'json'\n    //         },\n    //         headers: {\n    //             'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.67 Safari/537.36',\n    //             'Content-Type': 'application/x-www-form-urlencoded',\n    //             'origin': 'https://www.footasylum.com',\n    //             'referer': 'https://www.footasylum.com/',\n    //             'sec-fetch-dest': 'empty',\n    //             'sec-fetch-mode': 'cors',\n    //             'sec-fetch-site': 'cross-site'\n    //         },\n    //         followAllRedirects: true,\n    //         followRedirect: true,\n    //         followRedirects: true,\n    //         simple: false,\n    //         resolveWithFullResponse: true\n    //     };\n    //\n    //     // let rawResponse = await this._makeRequest(options);\n    //\n    //\n    //     const rawResponse = await fetch('https://api-e3.nuqlium.com/api/2.0/search/', {\n    //         method: 'POST',\n    //         mode: 'cors', // no-cors, *cors, same-origin\n    //         cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    //         credentials: 'same-origin', // include, *same-origin, omit\n    //         headers: {\n    //             'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.67 Safari/537.36',\n    //             'Content-Type': 'application/x-www-form-urlencoded',\n    //             'origin': 'https://www.footasylum.com',\n    //             'referer': 'https://www.footasylum.com/',\n    //             // 'sec-fetch-dest': 'empty',\n    //             // 'sec-fetch-mode': 'cors',\n    //             // 'sec-fetch-site': 'cross-site'\n    //         },\n    //         redirect: 'follow', // manual, *follow, error\n    //         referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    //         body: {\n    //             clientid: 'dfd62026-1477-48b5-ac33-d04ec326968b',\n    //             pagetype: 'product',\n    //             pagekey: this._pid,\n    //             mode: 'app',\n    //             dataindex: '100029',\n    //             output: 'json'\n    //         }\n    //     });\n    //\n    //     if (!rawResponse.success) {\n    //         return rawResponse;\n    //     }\n    //\n    //     let response = rawResponse.data;\n    //\n    //     console.log(response.body);\n    //\n    //     // let json = await tools.parseJSON(response.body);\n    //     //\n    //     // if (json === null || !('data' in json)) {\n    //     //     return { success: false, msg: 'UnexpectedJSONResponse' };\n    //     // }\n    //\n    //     // product data path\n    //     // json.data -> products obj -> products array[index] -> product obj\n    //     // productid, name, image, url, dateintroduced, totalstock, sales, instock\n    //     // options array[index] ->\n    //     // sku, promotionpriceasnumber, stock, attributes.size[0]\n    //\n    //     // if (json.data.products.products.length === 0) {\n    //     //     return { success: false, msg: 'NoMatchingProducts' };\n    //     // } else {\n    //     //     this._rawProductInformation = {\n    //     //         ...json.data.products.products[0].product,\n    //     //         product: json.data.products.products[0].product.name,\n    //     //         image: `https://imageresize.24i.com/?w=300&url=https://www.footasylum.com/images/products/productlistings/${this._pid}.jpg`\n    //     //     };\n    //     //     return { success: true, data: { product: json.data.products.products[0].product.name, ...json.data.products.products[0].product } };\n    //     // }\n    //     //\n    // }\n    //\n    // frameLoaded = async (e) => {\n    //     console.log(e)\n    //     console.log('loadeds')\n    // }\n\n\n    render() {\n\n        console.log(this.state)\n\n        return (\n            <div className=\"App\">\n                <Container>\n                    <div className=\"App-container\" ref={this.contextRef}>\n                        {/*<Sticky style={{ width: '100%' }} context={this.contextRef}>*/}\n                            <div style={{\n                                // backgroundColor: 'red',\n                                width: '100%'\n                            }}>\n                                <div style={{ padding: '20px 0 0 0' }}>\n                                    <Image src='https://aftermarketplug.com/build/static/media/logo.b77036b7.png' size='medium' centered />\n                                </div>\n\n\n\n                                <Sticky style={{ width: '100%' }} context={this.contextRef}>\n                                    <div style={{\n                                        // backgroundColor: 'red',\n                                        backgroundColor: '#2c3e50',\n                                        width: '100%',\n                                        padding: '0 0 20px 0'\n                                    }}>\n                                        <Input\n                                            label={<Dropdown onChange={this.searchMethodChanged} defaultValue='search' options={options} />}\n                                            // label={{ basic: true, content: `${this.state.searchResults.length} found` }}\n                                            labelPosition='left'\n                                            value={this.state.searchQuery}\n                                            loading={this.state.loading}\n                                            onChange={this.inputChange}\n                                            placeholder='Enter search query...'\n                                            fluid\n                                            style={{\n                                                padding: '30px 0'\n                                            }}\n                                        />\n\n                                        <div style={{\n                                            textAlign: 'center'\n                                        }}>\n                                            {\n                                                this.state.pageProperties ? (\n                                                    <Pagination\n                                                        defaultActivePage={1}\n                                                        totalPages={this.state.pageProperties.maxpages}\n                                                        activePage={this.state.activePage}\n                                                        onPageChange={this.handlePaginationChange}\n                                                        // size='small'\n                                                        // siblingRange={10}\n                                                        // totalPages={totalPages}\n                                                        // Heads up! All items are powered by shorthands, if you want to hide one of them, just pass `null` as value\n                                                        ellipsisItem={null}\n                                                        firstItem={null}\n                                                        lastItem={null}\n                                                        // prevItem={showPreviousAndNextNav ? undefined : null}\n                                                        // nextItem={showPreviousAndNextNav ? undefined : null}\n                                                    />\n                                                ) : (\n                                                    <Pagination\n                                                        defaultActivePage={1}\n                                                        totalPages={1}\n                                                        activePage={this.state.activePage}\n                                                        disabled\n                                                        // size='small'\n                                                        // siblingRange={siblingRange}\n                                                        // totalPages={totalPages}\n                                                        // Heads up! All items are powered by shorthands, if you want to hide one of them, just pass `null` as value\n                                                        ellipsisItem={null}\n                                                        firstItem={null}\n                                                        lastItem={null}\n                                                        // firstItem={showFirstAndLastNav ? undefined : null}\n                                                        // lastItem={showFirstAndLastNav ? undefined : null}\n                                                        // prevItem={showPreviousAndNextNav ? undefined : null}\n                                                        // nextItem={showPreviousAndNextNav ? undefined : null}\n                                                    />\n                                                )\n                                            }\n                                        </div>\n                                    </div>\n                                </Sticky>\n                            </div>\n                        {/*</Sticky>*/}\n\n                        {/*<div style={{*/}\n                        {/*    padding: '20px 0'*/}\n                        {/*}}>*/}\n                        {/*    <Card.Group itemsPerRow={(isMobile) ? 2 : 4}>*/}\n                        {/*        {*/}\n                        {/*            (this.state.searchResults.length !== 0) ? (*/}\n                        {/*                this.state.searchResults.map((hit) => {*/}\n                        {/*                    console.log(hit)*/}\n                        {/*                    return (*/}\n                        {/*                        <Card>*/}\n                        {/*                            <Image src={hit.image} wrapped ui={false} />*/}\n                        {/*                            <Card.Content>*/}\n                        {/*                                <Card.Header style={{*/}\n                        {/*                                    textOverflow: 'ellipsis',*/}\n                        {/*                                    overflow: 'hidden',*/}\n                        {/*                                    whiteSpace: 'pre'*/}\n                        {/*                                }}>{hit.product}</Card.Header>*/}\n                        {/*                                <Card.Meta>*/}\n                        {/*                                    <span className='date'>{hit.id}</span>*/}\n                        {/*                                </Card.Meta>*/}\n                        {/*                                /!*<Card.Description>*!/*/}\n                        {/*                                /!*    <Accordion panels={[{*!/*/}\n                        {/*                                /!*        key: 'description',*!/*/}\n                        {/*                                /!*        title: 'Description',*!/*/}\n                        {/*                                /!*        content: hit.description,*!/*/}\n                        {/*                                /!*    }]} />*!/*/}\n                        {/*                                /!*</Card.Description>*!/*/}\n                        {/*                            </Card.Content>*/}\n                        {/*                            <Card.Content extra>*/}\n                        {/*                                <p>*/}\n                        {/*                                    Added: {moment.unix(hit['first-stock-date']).fromNow()}*/}\n                        {/*                                </p>*/}\n                        {/*                            </Card.Content>*/}\n                        {/*                            <Card.Content extra>*/}\n                        {/*                                <p>*/}\n                        {/*                                    Modified: {moment.unix(hit['last-modified']).fromNow()}*/}\n                        {/*                                </p>*/}\n                        {/*                            </Card.Content>*/}\n                        {/*                        </Card>*/}\n                        {/*                    )*/}\n                        {/*                })*/}\n                        {/*            ) : null*/}\n                        {/*        }*/}\n                        {/*    </Card.Group>*/}\n                        {/*</div>*/}\n\n                        <div style={{\n                            padding: '20px 20px'\n                        }}>\n                            <Card.Group itemsPerRow={(isMobile) ? 2 : 4}>\n                                {\n                                    (this.state.searchResults.length !== 0) ? (\n                                        this.state.searchResults.map((hit) => {\n\n                                            if (this.state.loading) {\n                                                return (\n\n                                                    <Card style={{\n                                                        padding: 10\n                                                    }}>\n                                                        <Placeholder>\n                                                            <Placeholder.Image square />\n                                                            <Placeholder.Header>\n                                                                <Placeholder.Line length='medium' />\n                                                                <Placeholder.Line length='very short' />\n                                                            </Placeholder.Header>\n                                                            {/*<Placeholder.Header style={{*/}\n                                                            {/*    padding: 5*/}\n                                                            {/*}}>*/}\n                                                            {/*    <Placeholder.Line length='medium' />*/}\n                                                            {/*    <Placeholder.Line length='very short' />*/}\n                                                            {/*</Placeholder.Header>*/}\n                                                            {/*<Placeholder.Paragraph>*/}\n                                                            {/*    <Placeholder.Line length='short' />*/}\n                                                            {/*</Placeholder.Paragraph>*/}\n                                                        {/*<Card.Content extra>*/}\n                                                        {/*    <p>*/}\n                                                        {/*        Added: {moment.unix(hit['first-stock-date']).fromNow()}*/}\n                                                        {/*    </p>*/}\n                                                        {/*</Card.Content>*/}\n                                                        {/*<Card.Content extra>*/}\n                                                        {/*    <p>*/}\n                                                        {/*        Modified: {moment.unix(hit['last-modified']).fromNow()}*/}\n                                                        {/*    </p>*/}\n                                                        {/*</Card.Content>*/}\n                                                        </Placeholder>\n                                                    </Card>\n                                                )\n                                            } else {\n                                                console.log(hit)\n\n                                                let stockBreakdown = hit.product.options.map((option) => {\n                                                    return `${option.attributes.size[0]} (${option.stock})`\n                                                })\n\n                                                return (\n                                                    <Card>\n                                                        <Image label={{ ribbon: 'right', content: `£${hit.product.option.promotionpriceasnumber}`, color: 'red' }} src={hit.product.image} wrapped ui={false} />\n                                                        <Card.Content>\n                                                            <Card.Header style={{\n                                                                textOverflow: 'ellipsis',\n                                                                overflow: 'hidden',\n                                                                whiteSpace: 'pre'\n                                                            }}>{hit.product.name}</Card.Header>\n                                                            <Card.Meta>\n                                                                <span className='date'>{hit.product.productid}</span>\n                                                            </Card.Meta>\n                                                            <Card.Description>\n                                                                {/*<Accordion as={Container} panels={[{*/}\n                                                                {/*    key: `${hit.product.productid}-sizes`,*/}\n                                                                {/*    title: 'Stock Breakdown',*/}\n                                                                {/*    content: stockBreakdown.join('&nbsp;'),*/}\n                                                                {/*}]} />*/}\n                                                                {/*/!*<Accordion panels={hit.product.options.map((option) => {*!/*/}\n                                                                {/*/!*    return {*!/*/}\n                                                                {/*/!*        key: `${hit.product.productid}-${option.attributes.size[0]}`,*!/*/}\n                                                                {/*/!*        title: 'Stock',*!/*/}\n                                                                {/*/!*        content: 'test',*!/*/}\n                                                                {/*/!*    }*!/*/}\n                                                                {/*/!*})} />*!/*/}\n\n                                                                {stockBreakdown.map((option) => {\n                                                                    return <p style={{ padding: 0, margin: 0 }}>{option}</p>\n                                                                })}\n\n                                                            </Card.Description>\n                                                        </Card.Content>\n                                                        <Card.Content extra>\n                                                            <strong><p>\n                                                                Total Stock: {hit.product.totalstock}\n                                                            </p></strong>\n                                                        </Card.Content>\n                                                        <Card.Content extra>\n                                                            {\n                                                                ('dateintroduced' in hit.product) ? (\n                                                                    <strong><p>\n                                                                        Added {moment(hit.product.dateintroduced).fromNow()}\n                                                                    </p></strong>\n                                                                ) : (\n                                                                    <strong><p>\n                                                                        Date introduced missing!\n                                                                    </p></strong>\n                                                                )\n                                                            }\n\n                                                        </Card.Content>\n                                                    </Card>\n                                                )\n                                            }\n                                        })\n                                    ) : null\n                                }\n                            </Card.Group>\n                        </div>\n\n\n                    </div>\n                </Container>\n            </div>\n        );\n    }\n\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}