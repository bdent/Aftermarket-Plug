{"version":3,"sources":["logo.png","App.js","reportWebVitals.js","index.js"],"names":["index","require","algoliasearch","initIndex","App","props","inputChange","event","a","currentSearch","target","value","setState","searchQuery","setTimeout","state","search","loading","hitsPerPage","then","hits","searchResults","catch","err","console","log","this","className","Container","style","padding","Image","src","size","centered","Input","label","basic","content","length","labelPosition","onChange","placeholder","fluid","Card","Group","itemsPerRow","isMobile","map","hit","image","wrapped","ui","Content","Header","textOverflow","overflow","whiteSpace","product","Meta","id","extra","moment","unix","fromNow","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oTAAe,I,yEC4BTA,EAFgBC,EAAQ,IACfC,CAAc,aAAc,oCACtBC,UAAU,2CAyBVC,E,kDAEjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAQVC,YATmB,uCASL,WAAOC,GAAP,eAAAC,EAAA,sDACNC,EAAgBF,EAAMG,OAAOC,MAEjC,EAAKC,SAAS,CACVC,YAAaJ,IAGjBK,YAAW,WACHL,IAAkB,EAAKM,MAAMF,aAC7B,EAAKG,OAAOP,KAEjB,KAXO,2CATK,wDAyBnBO,OAzBmB,uCAyBV,WAAOP,GAAP,SAAAD,EAAA,sDAEL,EAAKI,SAAS,CACVK,SAAS,IAGbjB,EACKgB,OAAO,EAAKD,MAAMF,YAAa,CAC5BK,YAAa,MAEhBC,KAJL,uCAIU,6BAAAX,EAAA,yDAASY,EAAT,EAASA,KACPX,IAAkB,EAAKM,MAAMF,YAD/B,gBAEE,EAAKD,SAAS,CACVS,cAAeD,EACfH,SAAS,IAJf,2FAJV,uDAcKK,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MArBf,2CAzBU,sDAEf,EAAKR,MAAQ,CACTF,YAAa,GACbQ,cAAe,GACfJ,SAAS,GALE,E,qDAsDf,OAFAO,QAAQC,IAAIC,KAAKX,OAGb,qBAAKY,UAAU,MAAf,SACI,cAACC,EAAA,EAAD,UACI,sBAAKD,UAAU,gBAAf,UAEI,qBAAKE,MAAO,CAAEC,QAAS,cAAvB,SACI,cAACC,EAAA,EAAD,CAAOC,IAAI,mEAAmEC,KAAK,SAASC,UAAQ,MAGxG,cAACC,EAAA,EAAD,CACIC,MAAO,CAAEC,OAAO,EAAMC,QAAQ,GAAD,OAAKZ,KAAKX,MAAMM,cAAckB,OAA9B,WAC7BC,cAAc,OACd7B,MAAOe,KAAKX,MAAMF,YAClBI,QAASS,KAAKX,MAAME,QACpBwB,SAAUf,KAAKpB,YACfoC,YAAY,wBACZC,OAAK,EACLd,MAAO,CACHC,QAAS,YAIjB,qBAAKD,MAAO,CACRC,QAAS,UADb,SAGI,cAACc,EAAA,EAAKC,MAAN,CAAYC,YAAcC,WAAY,EAAI,EAA1C,SAE6C,IAApCrB,KAAKX,MAAMM,cAAckB,OACtBb,KAAKX,MAAMM,cAAc2B,KAAI,SAACC,GAE1B,OADAzB,QAAQC,IAAIwB,GAER,eAACL,EAAA,EAAD,WACI,cAACb,EAAA,EAAD,CAAOC,IAAKiB,EAAIC,MAAOC,SAAO,EAACC,IAAI,IACnC,eAACR,EAAA,EAAKS,QAAN,WACI,cAACT,EAAA,EAAKU,OAAN,CAAazB,MAAO,CAChB0B,aAAc,WACdC,SAAU,SACVC,WAAY,OAHhB,SAIIR,EAAIS,UACR,cAACd,EAAA,EAAKe,KAAN,UACI,sBAAMhC,UAAU,OAAhB,SAAwBsB,EAAIW,UAUpC,cAAChB,EAAA,EAAKS,QAAN,CAAcQ,OAAK,EAAnB,SACI,wCACYC,IAAOC,KAAKd,EAAI,qBAAqBe,eAGrD,cAACpB,EAAA,EAAKS,QAAN,CAAcQ,OAAK,EAAnB,SACI,2CACeC,IAAOC,KAAKd,EAAI,kBAAkBe,qBAMjE,oB,GAvHPC,aCzClBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjD,MAAK,YAAkD,IAA/CkD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7ecfa276.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b77036b7.png\";","import React, {Component} from 'react';\n\nimport logo from './logo.png';\nimport './App.css';\n\nimport 'semantic-ui-css/semantic.min.css';\n\n// import { Input } from 'semantic-ui-react';\n\nimport moment from 'moment';\n\nimport {\n    isBrowser,\n    isMobile\n} from \"react-device-detect\";\n\nimport {\n    Card,\n    Icon,\n    Image,\n    Input,\n    Container,\n    Accordion\n} from 'semantic-ui-react'\n\n\nconst algoliasearch = require(\"algoliasearch\");\nconst client = algoliasearch(\"AB7G20A8HU\", \"b66828a8b34cae4dcd4d56bd164b0a9f\");\nconst index = client.initIndex(\"prod_fa_products_azure_first_added_desc\");\n// const index = client.initIndex(\"prod_fa_products_azure_searchable\");\n\n// https://ab7g20a8hu-dsn.algolia.net/1/indexes/prod_fa_products_azure_first_added_desc/query HTTP/1.1\n//     Host: ab7g20a8hu-dsn.algolia.net\n// Content-Type: application/json\n// Accept-Encoding: gzip, deflate, br\n\n\n// index.setSettings({\n//     ranking: [\n//         \"desc(first-stock-date)\",\n//         \"typo\",\n//         \"geo\",\n//         \"words\",\n//         \"filters\",\n//         \"proximity\",\n//         \"attribute\",\n//         \"exact\",\n//         \"custom\"\n//     ]\n// }).then(() => {\n//     // done\n// });\n\nexport default class App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchQuery: '',\n            searchResults: [],\n            loading: false\n        }\n    }\n\n    inputChange = async (event) => {\n        let currentSearch = event.target.value;\n\n        this.setState({\n            searchQuery: currentSearch\n        });\n\n        setTimeout(() => {\n            if (currentSearch === this.state.searchQuery) {\n                this.search(currentSearch);\n            }\n        }, 750)\n\n\n    }\n\n    search = async (currentSearch) => {\n\n        this.setState({\n            loading: true\n        });\n\n        index\n            .search(this.state.searchQuery, {\n                hitsPerPage: 300\n            })\n            .then(async ({ hits }) => {\n                if (currentSearch === this.state.searchQuery) {\n                    this.setState({\n                        searchResults: hits,\n                        loading: false\n                    })\n                } else {\n                    return;\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    render() {\n\n        console.log(this.state)\n\n        return (\n            <div className=\"App\">\n                <Container>\n                    <div className=\"App-container\">\n\n                        <div style={{ padding: '20px 0 0 0' }}>\n                            <Image src='https://aftermarketplug.com/build/static/media/logo.b77036b7.png' size='medium' centered />\n                        </div>\n\n                        <Input\n                            label={{ basic: true, content: `${this.state.searchResults.length} found` }}\n                            labelPosition='left'\n                            value={this.state.searchQuery}\n                            loading={this.state.loading}\n                            onChange={this.inputChange}\n                            placeholder='Enter search query...'\n                            fluid\n                            style={{\n                                padding: '30px 0'\n                            }}\n                        />\n\n                        <div style={{\n                            padding: '20px 0'\n                        }}>\n                            <Card.Group itemsPerRow={(isMobile) ? 2 : 4}>\n                                {\n                                    (this.state.searchResults.length !== 0) ? (\n                                        this.state.searchResults.map((hit) => {\n                                            console.log(hit)\n                                            return (\n                                                <Card>\n                                                    <Image src={hit.image} wrapped ui={false} />\n                                                    <Card.Content>\n                                                        <Card.Header style={{\n                                                            textOverflow: 'ellipsis',\n                                                            overflow: 'hidden',\n                                                            whiteSpace: 'pre'\n                                                        }}>{hit.product}</Card.Header>\n                                                        <Card.Meta>\n                                                            <span className='date'>{hit.id}</span>\n                                                        </Card.Meta>\n                                                        {/*<Card.Description>*/}\n                                                        {/*    <Accordion panels={[{*/}\n                                                        {/*        key: 'description',*/}\n                                                        {/*        title: 'Description',*/}\n                                                        {/*        content: hit.description,*/}\n                                                        {/*    }]} />*/}\n                                                        {/*</Card.Description>*/}\n                                                    </Card.Content>\n                                                    <Card.Content extra>\n                                                        <p>\n                                                            Added: {moment.unix(hit['first-stock-date']).fromNow()}\n                                                        </p>\n                                                    </Card.Content>\n                                                    <Card.Content extra>\n                                                        <p>\n                                                            Modified: {moment.unix(hit['last-modified']).fromNow()}\n                                                        </p>\n                                                    </Card.Content>\n                                                </Card>\n                                            )\n                                        })\n                                    ) : null\n                                }\n                            </Card.Group>\n                        </div>\n\n                    </div>\n                </Container>\n            </div>\n        );\n    }\n\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}